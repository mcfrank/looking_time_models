---
title: "R-Python Comparison"
format: html
editor: visual
---

```{python}
import pandas as pd


#b1d7_df = pd.read_pickle("cache_results/cache_summary/b1d7.pickle")
#b1d3_df = pd.read_pickle("cache_results/cache_summary/b1d3.pickle")

#b1d15_df = pd.read_pickle("cache_results/cache_summary/b1d15.pickle")
#b1d18_df = pd.read_pickle("cache_results/cache_summary/b1d18.pickle")
summary_df =  pd.read_pickle("cache_results/cache_summary/summary.pickle")


main_df = pd.concat([summary_df])
main_df = main_df[main_df["stimuli"].isin(["BBBBBB", "BBBBBD", "BDBBBB", "BBBDBB"])]




main_df

```


# Visualization in R 

```{R}
library(tidyverse)
library(here)
library(reticulate)
library(ggthemes)


py$main_df
```

```{R}
summary_df

```



```{R}
library(tidyverse)
library(here)
library(reticulate)
library(ggthemes)

summary_df <- py$main_df %>% 
  unnest(stimulus_id) %>% 
  group_by(stimulus_id, stimuli, batch_id, j_i, b_val, d_val) %>% 
  count() %>% 
  mutate(distance = abs(b_val - d_val)) %>% 
  mutate(distance_type = case_when(
    distance < 1 ~ "dist < 1", 
    distance > 1 & distance < 3 ~ "1 < dist < 3", 
    distance > 3 ~ "dist > 3"
  )) %>% 
  mutate(
    grid_mu_start = -4, 
    grid_mu_end = 4, 
    grid_sigma_start = 0.001, 
    grid_sigma_end = 1.8,
    grid_y_start = -4, 
    grid_y_end = 4
  ) %>% 
  mutate(
    grid_relationship = case_when(
    abs(b_val) > 2 | abs(d_val) > 2 ~ "oob", 
    #abs(b_val) > grid_mu_end | abs(d_val) > grid_mu_end ~ "oob", 
    TRUE ~ "normal"
    )
  ) %>% 
  mutate(
    bd_order = case_when(
      b_val < d_val ~ "b < d", 
      b_val > d_val ~ "b > d"
    )
    
  ) %>% 
  mutate(
    sigma_in_bound = (distance < grid_sigma_end), 
    distance_interval = case_when(
      distance < .5 ~ "d < .5", 
      distance > .5 & distance < 1 ~ ".5 < d < 1", 
      distance > 1 & distance < 1.4 ~ "1 < d < end", 
      TRUE ~ "oob"
    )
  )



summary_df
```
# General trend  
  
```{R}
summary_df %>% 
  ggplot(aes(x = stimulus_id, y = n)) + 
  stat_summary(fun.data = "mean_cl_boot", position = position_dodge(width = .4)) + 
  stat_summary(fun.data = "mean_cl_boot", geom = "line", position = position_dodge(width = .4)) + 
  facet_wrap(~stimuli) + 
  theme_few()

```



# distance gradient?

```{R}


summary_df %>% 
  filter(grid_relationship == "normal") %>% 
  filter(distance_type == "dist < 1") %>% 
  ggplot(aes(x = stimulus_id, y = n, color = distance_type)) + 
  stat_summary(fun.data = "mean_cl_boot", position = position_dodge(width = .5)) + 
  stat_summary(fun.data = "mean_cl_boot", geom = "line", position = position_dodge(width = .5)) + 
  facet_wrap(~stimuli) + 
  theme_few()

```

## focus on the in bounds ones

```{R}

summary_df %>% 
  filter(grid_relationship == "normal") %>% 
  mutate(distance = round(distance, 1)) %>% 
  ggplot(aes(x = stimulus_id, y = n, color = as.factor(distance))) + 
  stat_summary(fun.data = "mean_cl_boot", position = position_dodge(width = .5)) + 
  stat_summary(fun.data = "mean_cl_boot", geom = "line", position = position_dodge(width = .5)) + 
  facet_grid(~stimuli) + 
  theme_few()

```



```{r}
summary_df %>% 
  filter(
    (stimuli == "BDBBBB" & stimulus_id == 1) | 
    (stimuli == "BBBDBB" & stimulus_id == 3) | 
    (stimuli == "BBBBBD" & stimulus_id == 5) 
  ) %>% 
  ggplot(aes(x = stimulus_id, y = n, color = stimuli_spec)) + 
  stat_summary(fun.data = "mean_cl_boot", position = position_dodge(width = .4)) + 
  theme_few()
 
```


```{r}
library(bayesAB)
#plotNormalInvGamma(0.001, 0.001, 1, 1)


#plotNormalInvGamma(0.001, 1, 1, 1)
#plotNormalInvGamma(0.001, 0.1, 1, 1)
#plotNormalInvGamma(0.001, 0.01, 1, 1)
plotNormalInvGamma(0, 3, 10, 1)
plotNormalInvGamma(0, 3, 1, 2)

plotNormalInvGamma(0, 3, 2, 1)



```

