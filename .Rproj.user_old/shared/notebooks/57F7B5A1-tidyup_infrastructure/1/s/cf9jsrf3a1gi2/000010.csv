"0",""
"0","    "
"0","get_possible_creatures <- function(current_observation){"
"0","  "
"0","  flip_observation <- as.logical(1 - (current_observation) %>% "
"0","                                    as.logical()) %>% "
"0","                      as.vector() %>% "
"0","                      as_tibble_row(.name_repair = ~ names(current_observation)) "
"0","  "
"0","  combine_observations <- bind_rows(current_observation, flip_observation)"
"0","  "
"0","  all_possible_creatures <- combine_observations %>% "
"0","    cross_df() %>% "
"0","    mutate(index = row_number())"
"0","  "
"0","  # will return a df of possible creatures "
"0","  return (all_possible_creatures) "
"0","}    "
"0",""
"0","get_possible_kls <- function("
"0","                         observations, "
"0","                         all_possible_outcomes, "
"0","                         posterior_at_t, "
"0","                         grid_theta = grid_theta, "
"0","                          grid_epsilon = grid_epsilon, "
"0","                          alpha_prior = alpha_prior, "
"0","                          beta_prior = beta_prior,"
"0","                          alpha_epsilon = alpha_epsilon, "
"0","                          beta_epsilon = beta_epsilon){"
"0","  "
"0","  all_possible_outcomes <- all_possible_outcomes %>% "
"0","    mutate(index = row_number())"
"0","  "
"0","  possible_kls <- tibble("
"0","    ""index"" = all_possible_outcomes$index, "
"0","    ""kl"" = rep(NA, all_possible_outcomes$index %>% length())"
"0","  )"
"0","  for (i in 1: nrow(all_possible_outcomes)){"
"0","    "
"0","    current_scenario <- observations %>% "
"0","      bind_rows(all_possible_outcomes %>% "
"0","              filter(index == i))"
"0","      "
"0","    posterior_for_current_scenario <- grid_apprxoimation_with_observation("
"0","                          noisy_observation = current_scenario, "
"0","                          track_epsilon = TRUE, "
"0","                          grid_theta = grid_theta, "
"0","                          grid_epsilon = grid_epsilon, "
"0","                          alpha_prior = alpha_prior, "
"0","                          beta_prior = beta_prior,"
"0","                          alpha_epsilon = alpha_epsilon, "
"0","                          beta_epsilon = beta_epsilon"
"0","                        )"
"0","    "
"0","    "
"0","    # now calculate kl feature by feature "
"0","    features <- posterior_for_current_scenario %>% "
"0","      distinct(feature_index) %>% "
"0","      pull()"
"0","    "
"0","    creature_kl <- dkl(posterior_for_current_scenario$posterior, "
"0","                 posterior_at_t$posterior)"
"0","      "
"0","    "
"0","    # bind creature kl with other kl "
"0","    "
"0","    possible_kls$kl[i] <- creature_kl"
"0","    "
"0","    "
"0","  }"
"0","  "
"0","  "
"0","  # will return a df of possible kls "
"0","  return (possible_kls)  "
"0","}"
