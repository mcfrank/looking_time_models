"0","set.seed(42)"
"0","grid_theta <- seq(0.1, 1, 0.2)"
"0","grid_epsilon <- seq(0.1, 1, 0.2)"
"0","alpha_prior = 1"
"0","beta_prior = 1"
"0","alpha_epsilon = 10 "
"0","beta_epsilon = 1"
"0",""
"0",""
"0","dkl <- function (x,y) {"
"0","  sum(x * log(x / y)) "
"0","}"
"0",""
"0","noisy_post_pred <- function(theta, epsilon, posterior, heads = TRUE) {"
"0","  # probability of a head is:"
"0","  # (didn't get flipped * it's a head) + (got flipped + it was a tail)"
"0","  p_1 <- sum(((1 - epsilon) * theta * posterior) + "
"0","               (epsilon * (1-theta) * posterior))"
"0","  "
"0","  # the alternative:"
"0","  # (didn't get flipped * it's a tail) + (got flipped + it's a head)"
"0","  # p_0 <- sum(((1 - epsilon) * (1 - theta) * posterior) + "
"0","  #                 (epsilon * theta * posterior))"
"0","  "
"0","  # flip if you are asking for 0 probability"
"0","  ifelse(heads, p_1, 1 - p_1)"
"0","  "
"0","}"
"0",""
"0","main_simulation <- function("
"0","                          subject, "
"0","                          stimuli_sequence, "
"0","                          noise_parameter, "
"0","                          eig_from_world = .005,"
"0","                          max_observation = 500, # should this be per trial or in total? currently per trial "
"0","                          grid_theta = grid_theta, "
"0","                          grid_epsilon = grid_epsilon, "
"0","                          alpha_prior = alpha_prior, "
"0","                          beta_prior = beta_prior,"
"0","                          alpha_epsilon = alpha_epsilon, "
"0","                          beta_epsilon = beta_epsilon"
"0","                          ){"
"0","  "
"0","  # set up the df that tracks eig  "
"0","  df <- tibble(t = rep(NA,max_observation),"
"0","             stimulus_idx = rep(NA,max_observation), "
"0","             # also currently aggregating everything"
"0","             dkl_if_same = rep(NA,max_observation), "
"0","             dkl_if_different = rep(NA,max_observation),"
"0","             post_pred = rep(NA,max_observation), "
"0","             EIG = rep(NA,max_observation), "
"0","             # the bottom two rows are calculated by aggregating across all features "
"0","             p_look_away = rep(NA,max_observation), "
"0","             look_away = rep(NA,max_observation))"
"0",""
"0","  "
"0","  # set up the df that keep trakc of observation "
"0","  observations <-  stimuli_sequence %>% "
"0","    # create an empty dataframe with all the info needed to be tracked "
"0","    filter(is.na(.)) %>% "
"0","    mutate(t = NA_integer_) "
"0","  "
"0","  "
"0","  # the total number of stimuli "
"0","  total_trial_number = nrow(stimuli_sequence)"
"0","  total_feature_number = stimuli_sequence %>% "
"0","    select(starts_with(""V"")) %>% "
"0","    ncol()"
"0","  "
"0",""
"0",""
"0","  # which stimulus are we looking at"
"0","    stimulus_idx <- 1"
"0","    t <- 1"
"0","  "
"0","  "
"0","  while(stimulus_idx <= total_trial_number){"
"0","    "
"0","    current_stimulus <- stimuli_sequence %>% "
"0","      filter(trial_number == stimulus_idx)"
"0","    "
"0","    current_observation <- noisy_observation_creature("
"0","                                stimuli_df = stimuli_sequence,"
"0","                                trial_index  = stimulus_idx, "
"0","                                n_sample = 1, "
"0","                                epsilon = noise_parameter"
"0","                              )"
"0","    "
"0","    # add to current observation "
"0","    observations <- bind_rows(observations, "
"0","                              current_observation %>% mutate("
"0","                                trial_number = stimulus_idx, "
"0","                                trial_type = current_stimulus$trial_type,"
"0","                                t = t))"
"0","    "
"0","    # calculate posterior at t "
"0","    posterior_at_t <- grid_apprxoimation_with_observation("
"0","                          noisy_observation = observations, "
"0","                          track_epsilon = TRUE, "
"0","                          grid_theta = grid_theta, "
"0","                          grid_epsilon = grid_epsilon, "
"0","                          alpha_prior = alpha_prior, "
"0","                          beta_prior = beta_prior,"
"0","                          alpha_epsilon = alpha_epsilon, "
"0","                          beta_epsilon = beta_epsilon"
"0","                        )"
"0","    "
"0","    # make two alternative possibilities "
"0","    # Q: the independence of feature still holds?"
"0","    # this might be a serious issue "
"0","    # approach 1(simplest): either same with current observed, or completley flipped "
"0","    # approach 2(simplest): either same with the next observed, or completely flipped "
"0","    # approach 3(moderate): set a parameter on the creature level to determine how many are flipped and how many are not"
"0","    # appraoch 4(wacky): make the parameter change throughout the experiment "
"0","    obs_t_plus_1_same <- make_possible_scenario(observation_df = observations, "
"0","                                                scenario = ""same"") "
"0","    "
"0","    "
"0","    obs_t_plus_1_different <- make_possible_scenario("
"0","                                                observation_df = observations, "
"0","                                                scenario = ""different"") "
"0","    "
"0","    posterior_at_t_plus_1_same <- grid_apprxoimation_with_observation("
"0","                          noisy_observation = obs_t_plus_1_same, "
"0","                          track_epsilon = TRUE, "
"0","                          grid_theta = grid_theta, "
"0","                          grid_epsilon = grid_epsilon, "
"0","                          alpha_prior = alpha_prior, "
"0","                          beta_prior = beta_prior,"
"0","                          alpha_epsilon = alpha_epsilon, "
"0","                          beta_epsilon = beta_epsilon"
"0","                        )"
"0","    "
"0","    posterior_at_t_plus_1_diff <- grid_apprxoimation_with_observation("
"0","                          noisy_observation = obs_t_plus_1_different, "
"0","                          track_epsilon = TRUE, "
"0","                          grid_theta = grid_theta, "
"0","                          grid_epsilon = grid_epsilon, "
"0","                          alpha_prior = alpha_prior, "
"0","                          beta_prior = beta_prior,"
"0","                          alpha_epsilon = alpha_epsilon, "
"0","                          beta_epsilon = beta_epsilon"
"0","                        )"
"0","    "
"0","    # maybe needs scaling?"
"0","    "
"0","    df$t[t] = t"
"0","    df$stimulus_idx[t] = stimulus_idx"
"0","    df$dkl_if_same[t] <- dkl(posterior_at_t_plus_1_same$posterior, "
"0","                          posterior_at_t$posterior) #/ total_feature_number"
"0","    df$dkl_if_different[t] <- dkl(posterior_at_t_plus_1_diff$posterior, "
"0","                          posterior_at_t$posterior) #/ total_feature_number"
"0","    "
"0","    df$post_pred[t] <- noisy_post_pred(posterior_at_t$theta, "
"0","                                       posterior_at_t$epsilon,"
"0","                                       posterior_at_t$posterior) / total_feature_number"
"0","    "
"0","    df$EIG[t] = (1-df$post_pred[t]) * df$dkl_if_same[t] + df$post_pred[t] * df$dkl_if_different[t] "
"0","    "
"0","    # flip a coin with p_keep_looking weight"
"0","    df$p_look_away[t] = C / (df$EIG[t] + C)"
"0","    df$look_away[t] = rbinom(1, 1, prob = df$p_look_away[t]) == 1"
"0",""
"0","    if (df$look_away[t]==TRUE) {"
"0","      stimulus_idx <- stimulus_idx + 1"
"0","    }"
"0","    "
"0","    t <- t + 1 "
"0","      "
"0","      "
"0","  }"
"0","    "
"0","  df <- df %>% mutate(id = subject)"
"0","  "
"0","  "
"0","  return(df)"
"0","}"
