"0","iteration = 500"
"0","obs_s <- noisy_observation_creature("
"0","      stimuli_df = stimuli_sequence,"
"0","      trial_index  = stimulus_idx, "
"0","      n_sample = iteration, "
"0","      epsilon = noise_parameter"
"0","    )"
"0",""
"0","new_grid_approximation <- function(obs_s, iteration){"
"0","  "
"0",""
"0","  df_posterior <- expand_grid(theta = grid_theta,"
"0","                              epsilon = grid_epsilon,"
"0","                              feature_index = seq(1, feature_number))"
"0","  # not sure when do we really need the non-log one, save some $$$  "
"0","  df_posterior$unnormalized_log_posterior <- NA_real_"
"0","  df_posterior$log_posterior <- NA_real_"
"0",""
"0",""
"0","  list_df_posterior <- lapply(seq(1, iteration, 1), "
"0","                              function(x){df_posterior})"
"0","  "
"0","  "
"0","  t = 1"
"0","  while(t <= iteration){"
"0","    "
"0","    if(t == 1){"
"0","      # do some fresh calculation"
"0","      "
"0","      list_df_posterior[[t]] <- init_update( list_df_posterior[[t]], "
"0","                                             df_lp_theta_epsilon, "
"0","                                             obs_s[t, ],"
"0","                                             grid_theta, grid_epsilon,"
"0","                                             alpha_theta, beta_theta, "
"0","                                             alpha_epsilon, beta_epsilon)"
"0","    }else{"
"0","      list_df_posterior[[t]] <- cheaper_update_posterior(previous_posterior_df =  list_df_posterior[[t-1]],"
"0","                                                         current_posterior_df =  list_df_posterior[[t]], "
"0","                                                         obs_s[t, ], "
"0","                                                         grid_theta, grid_epsilon)"
"0","    }"
"0","    "
"0","    t = t + 1"
"0","  "
"0","  "
"0","  }"
"0","  "
"0","  new_pos <- list_df_posterior[[iteration]]"
"0",""
"0","  return(new_pos$unnormalized_log_posterior)"
"0","}"
"0",""
"0","old_grid_approximation <- function(obs_s, iteration){"
"0","  "
"0","  old_pos <- grid_apprxoimation_with_observation("
"0","  obs_s, "
"0","  grid_theta,"
"0","  grid_epsilon,  "
"0","  alpha_theta, "
"0","  beta_theta,"
"0","  alpha_epsilon, "
"0","  beta_epsilon)"
"0","  "
"0","  return(old_pos$unnormalized_log_posterior)"
"0","  "
"0","}"
"0",""
"0","bm_grid_approx <- bench::mark("
"0","  new_grid_approximation(obs_s, iteration), "
"0","  old_grid_approximation(obs_s, iteration)"
"0",")"
"2","Some expressions had a GC in every iteration; so filtering is disabled."
"0","bm_grid_approx"
